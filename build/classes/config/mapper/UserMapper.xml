<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mapper.UserMapper">
	<resultMap type="user" id="userMap">
		<id column="id" property="id" />
		<result column="name" property="name" />
		<result column="password" property="password" />
		<result column="headImg" property="headImg" />
	</resultMap>

	<!-- 添加 -->
	<insert id="insert" keyColumn="id" keyProperty="id"
		useGeneratedKeys="true" parameterType="user">
		INSERT INTO user
		(name,password,headImg)
		VALUES
		(#{name},#{password},#{headImg})
	</insert>

	<!-- 更新 -->
	<update id="update" parameterType="user">
		UPDATE user
		SET name = #{name},
		password = #{password},
		headImg = #{headImg}
		WHERE
		id = #{id}
	</update>

	<!-- 删除 -->
	<delete id="delete" parameterType="integer">
		DELETE FROM user WHERE id
		=
		#{id}
	</delete>

	<delete id="delete2" parameterType="user">
		DELETE FROM user WHERE id
		=
		#{id}
	</delete>

	<!-- 获取 -->
	<select id="get" resultMap="userMap">
		SELECT * FROM user WHERE id =
		#{id}
	</select>

	<select id="list" resultMap="userMap">
		SELECT * FROM user
	</select>

	<select id="count" resultType="integer">
		SELECT COUNT(*) FROM user
	</select>


	<!-- 动态操作 -->
	<!-- 动态添加 -->
	<insert id="dynamicInsert" keyColumn="id" keyProperty="id"
		useGeneratedKeys="true" parameterType="user">
		INSERT INTO user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="name != null">
				name,
			</if>
			<if test="password != null">
				password,
			</if>
			<if test="headImg != null">
				headImg,
			</if>
		</trim>
		<trim prefix="VALUES (" suffix=")" suffixOverrides=",">
			<if test="name != null">
				#{name},
			</if>
			<if test="password != null">
				#{password},
			</if>
			<if test="headImg != null">
				#{headImg},
			</if>
		</trim>
	</insert>

	<!-- 动态更新 -->
	<update id="dynamicUpdate" parameterType="user">
		UPDATE user
		<set>
			<if test="name != null">
				name = #{name},
			</if>
			<if test="password != null">
				password = #{password},
			</if>
			<if test="headImg != null">
				headImg = #{headImg},
			</if>
		</set>
		WHERE id=#{id}
	</update>



	<!-- 批量操作 -->
	<!-- 批量添加 -->
	<insert id="batchInsert" keyColumn="id" keyProperty="id"
		useGeneratedKeys="true" parameterType="list">
		INSERT INTO user (name,password,headImg) VALUES
		<foreach collection="list" item="item" separator=",">
			(#{item.name},#{item.password},#{item.headImg})
		</foreach>
	</insert>

	<!-- 批量删除 -->
	<delete id="batchDelete" parameterType="list">
		DELETE FROM user WHERE id IN
		<foreach collection="list" item="item" open="(" close=")"
			separator=",">
			#{item}
		</foreach>
	</delete>



	<!-- 批量更新 -->
	<!-- <update id="batchUpdate"> </update> -->
	<!-- 动态批量操作 -->
	<!-- 动态批量添加 -->
	<!-- <insert id="dynamicBatchInsert" keyColumn="id" keyProperty="id" useGeneratedKeys="true" 
		parameterType="list"> INSERT INTO user <trim prefix="(" suffix=")" suffixOverrides=","> 
		<if test="name != null"> name, </if> <if test="password != null"> password, 
		</if> </trim> VALUES <foreach collection="list" item="item" separator=","> 
		<trim prefix="(" suffix=")" suffixOverrides=","> <if test="name != null"> 
		#{name}, </if> <if test="password != null"> #{password}, </if> </trim> </foreach> 
		</insert> -->
	<!-- 动态批量更新 -->
	<!-- <update id="dynamicBatchUpdate" parameterType="list"> </update> -->





	<!-- 业务逻辑 -->

	<!-- 获取 -->
	<!-- 获取 通过用户名 -->
	<select id="getByName" resultMap="userMap">
		SELECT * FROM user WHERE name =
		#{name}
	</select>
	<!-- 获取 通过用户名和密码 -->
	<select id="getByNameAndPass" resultMap="userMap">
		SELECT * FROM user
		WHERE
		name =
		#{name} AND password =
		#{password}
	</select>

	<!-- 获取 模糊查询 【<bind>】 -->
	<select id="listFuzzyByName" parameterType="string"
		resultMap="userMap">
		<bind name="name" value="'%'+ name +'%'" />
		SELECT * FROM user WHERE name
		LIKE #{name}
	</select>

	<!-- 获取 多条件查询 -->
	<select id="listMulConditionByIdAndName" parameterType="hashmap"
		resultMap="userMap">
		SELECT * FROM user
		WHERE id LIKE CONCAT('%',#{id},'%')
		AND
		name LIKE CONCAT('%',#{name},'%')
	</select>

	<select id="listUserIdByPassword" parameterType="string"
		resultType="list">
		SELECT id FROM article WHERE password = #{password}
	</select>


</mapper>







